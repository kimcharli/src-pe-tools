package net.juniper.smgt.sae.sae;


/**
* net/juniper/smgt/sae/sae/_SubscriberIteratorStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from saeaccess.idl
* Sunday, February 1, 2009 10:24:16 PM EST
*/


/**
   * Interface that is used to iteratively retrieve subscriber objects that were
   * not transmitted from a single API call to the SAE.
   *
   * \b NOTE: If the SubscriberIterator is not used for an allotted time,
   * the garbage collector takes care of it.
   */
public class _SubscriberIteratorStub extends org.omg.CORBA.portable.ObjectImpl implements net.juniper.smgt.sae.sae.SubscriberIterator
{


  /**
     * The next_n() method retrieves the next N number of subscriber objects.
     *
     * @param[in] how_many Maximum number of subscriber objects to
     * return.
     *
     * @param[out] more True when there are more subscriber objects to retrieve.
     * False when all subscriber objects have
     * been retrieved. 
     *
     * @return Sequence of subscriber objects.
     */
  public net.juniper.smgt.sae.sae.Subscriber[] next_n (int how_many, org.omg.CORBA.BooleanHolder more)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("next_n", true);
                $out.write_ulong (how_many);
                $in = _invoke ($out);
                net.juniper.smgt.sae.sae.Subscriber $result[] = net.juniper.smgt.sae.sae.SubscriberSeqHelper.read ($in);
                more.value = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return next_n (how_many, more        );
            } finally {
                _releaseReply ($in);
            }
  } // next_n


  /**
     * The destroy () method stops the SubscriberIterator() method and 
     * frees associated memory.
     */
  public void destroy ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("destroy", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                destroy (        );
            } finally {
                _releaseReply ($in);
            }
  } // destroy

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:smgt.juniper.net/sae/SubscriberIterator:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _SubscriberIteratorStub
