package net.juniper.smgt.sae.sae;


/**
* net/juniper/smgt/sae/sae/SAETHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from saeaccess.idl
* Sunday, February 1, 2009 10:24:16 PM EST
*/


/// Types of exceptions for ServiceAuthenticationException.
abstract public class SAETHelper
{
  private static String  _id = "IDL:smgt.juniper.net/sae/SAET:1.0";

  public static void insert (org.omg.CORBA.Any a, net.juniper.smgt.sae.sae.SAET that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static net.juniper.smgt.sae.sae.SAET extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_enum_tc (net.juniper.smgt.sae.sae.SAETHelper.id (), "SAET", new String[] { "SAET_PUBLIC_IP_AUTHENTICATION", "SAET_MUTEX_GROUPS", "SAET_SERVICE_AUTHORIZATION", "SAET_ANONYMOUS_USER", "SAET_AUTH_PRECLUDES_ACTIVATE_ON_LOGIN", "SAET_INHERITED_SUBSCRIPTION", "SAET_SERVICE_UNAVAILABLE", "SAET_SUBSCRIPTION_AUTHORIZATION", "SAET_ACTIVATE_ONLY", "SAET_INVISIBLE", "SAET_FILTERED_OUT", "SAET_NO_SESSION_MODIFICATION", "SAET_TRANSIENT_EXCEPTION", "SAET_PERSISTENT_ACTIVATION"} );
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static net.juniper.smgt.sae.sae.SAET read (org.omg.CORBA.portable.InputStream istream)
  {
    return net.juniper.smgt.sae.sae.SAET.from_int (istream.read_long ());
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, net.juniper.smgt.sae.sae.SAET value)
  {
    ostream.write_long (value.value ());
  }

}
