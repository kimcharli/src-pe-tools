package net.juniper.smgt.sae.sae;


/**
* net/juniper/smgt/sae/sae/SubscriberIteratorOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from saeaccess.idl
* Sunday, February 1, 2009 10:24:16 PM EST
*/


/**
   * Interface that is used to iteratively retrieve subscriber objects that were
   * not transmitted from a single API call to the SAE.
   *
   * \b NOTE: If the SubscriberIterator is not used for an allotted time,
   * the garbage collector takes care of it.
   */
public interface SubscriberIteratorOperations 
{

  /**
     * The next_n() method retrieves the next N number of subscriber objects.
     *
     * @param[in] how_many Maximum number of subscriber objects to
     * return.
     *
     * @param[out] more True when there are more subscriber objects to retrieve.
     * False when all subscriber objects have
     * been retrieved. 
     *
     * @return Sequence of subscriber objects.
     */
  net.juniper.smgt.sae.sae.Subscriber[] next_n (int how_many, org.omg.CORBA.BooleanHolder more);

  /**
     * The destroy () method stops the SubscriberIterator() method and 
     * frees associated memory.
     */
  void destroy ();
} // interface SubscriberIteratorOperations
